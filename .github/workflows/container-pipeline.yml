name: Java CI Pipeline (Containerized)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  java-ci:
    runs-on: ubuntu-latest
    steps:
      # Stage 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Stage 2: Scan Source (inside sonar-scanner container)
      - name: Code Scan
        uses: docker://sonarsource/sonar-scanner-cli
        with:
          entrypoint: ""
        run: |
          sonar-scanner -Dsonar.projectKey=java-app -Dsonar.sources=.

      # Stage 3: Build Java App (inside Maven container)
      - name: Build with Maven
        uses: docker://maven:3.9.4-eclipse-temurin-17
        with:
          entrypoint: ""
        run: mvn clean package

      # Stage 4: Build Docker Image (inside Docker CLI container)
      - name: Build Docker Image
        uses: docker://docker:24.0.5-cli
        with:
          entrypoint: ""
        run: |
          echo -e "FROM eclipse-temurin:17\nCOPY target/*.jar /app.jar\nENTRYPOINT [\"java\", \"-jar\", \"/app.jar\"]" > Dockerfile
          docker build -t ${{ github.repository }}:latest .

      # Stage 5: Push Docker Image (inside Docker CLI container)
      - name: Push Docker Image
        uses: docker://docker:24.0.5-cli
        with:
          entrypoint: ""
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag ${{ github.repository }} $DOCKERHUB_USERNAME/${{ github.repository }}
          docker push $DOCKERHUB_USERNAME/${{ github.repository }}
